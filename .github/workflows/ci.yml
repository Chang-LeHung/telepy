name: CI Tests and Coverage

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff>=0.14.0

      - name: Run ruff check
        run: ruff check src/ tests/

      - name: Run ruff format check
        run: ruff format --check src/ tests/

  test:
    name: Test on ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build extension
        run: make build

      - name: Install package
        run: make install

      - name: Run tests with retry (Attempt 1)
        id: test_attempt_1
        continue-on-error: true
        run: make test

      - name: Run tests with retry (Attempt 2)
        id: test_attempt_2
        if: steps.test_attempt_1.outcome == 'failure'
        continue-on-error: true
        run: make test

      - name: Run tests with retry (Attempt 3)
        id: test_attempt_3
        if: steps.test_attempt_2.outcome == 'failure'
        run: make test

      - name: Check test results
        if: steps.test_attempt_1.outcome == 'failure' && steps.test_attempt_2.outcome == 'failure' && steps.test_attempt_3.outcome == 'failure'
        run: |
          echo "Tests failed after 3 attempts"
          exit 1

  coverage:
    name: Coverage Report on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    needs: [lint, test]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build extension
        run: make build

      - name: Install package
        run: make install

      - name: Run coverage with retry (Attempt 1)
        id: coverage_attempt_1
        continue-on-error: true
        run: make coverage

      - name: Run coverage with retry (Attempt 2)
        id: coverage_attempt_2
        if: steps.coverage_attempt_1.outcome == 'failure'
        continue-on-error: true
        run: make coverage

      - name: Run coverage with retry (Attempt 3)
        id: coverage_attempt_3
        if: steps.coverage_attempt_2.outcome == 'failure'
        run: make coverage

      - name: Check coverage results
        if: steps.coverage_attempt_1.outcome == 'failure' && steps.coverage_attempt_2.outcome == 'failure' && steps.coverage_attempt_3.outcome == 'failure'
        run: |
          echo "Coverage failed after 3 attempts"
          exit 1

      - name: Upload coverage reports to Codecov
        if: steps.coverage_attempt_1.outcome == 'success' || steps.coverage_attempt_2.outcome == 'success' || steps.coverage_attempt_3.outcome == 'success'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: ${{ matrix.os }}
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive coverage HTML report
        if: steps.coverage_attempt_1.outcome == 'success' || steps.coverage_attempt_2.outcome == 'success' || steps.coverage_attempt_3.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}
          path: htmlcov/
          retention-days: 30
